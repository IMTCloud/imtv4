#! /usr/bin/perl -wX


use CGI;
$q = new CGI;

$ENV{'SHELL'} = '/bin/sh';		
$ENV{'PATH'} = '/usr/lib/jvm/java-1.5.0-sun-1.5.0.10/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/X11R6/bin';

require "/opt/imt/web/modulos/imthwd.htm";
require "/opt/imt/web/modulos/rutaidioma";
require "/opt/imt/web/modulos/rutaficheros";
$aux = "/tmp/aux".int(rand(10000));


open(OLD, "< $modulos")    or die "can't open $modulos: $!";
		
	while (<OLD>) 
	{
			if (/^\s*IMT_BACKUPPC\s*=.*$/)
     		{
				chomp;
				$_ =~ s/^\s+//;
				@data = split (/\s*=\s*/,$_);
				
				
				if ($data[1] ne "1") {
				print qq~Location: nodisponible.htm\n\n~;
				}
				
			}
	}
close(OLD);


$linkbackuppc=`/bin/ls -L /var/lib/backuppc`;


if($q->param('env') eq "envcontroldisco")
{
	$xact3=$q->param('xact3');
	$xact3h=$q->param('xact3h');
	$numcelda=$q->param('numcelda');


if($xact3 eq 1 && $xact3h eq 0)
{

	if($linkbackuppc !~ /cpool/)
	{
		system("$backuppcd stop >/dev/null 2>&1");
		system("/bin/cp -pr ${mysqlstock}backuppc ${raizmontado}celda${numcelda}/");	
		system("/bin/rm /var/lib/backuppc");	
		system("/bin/ln -s ${raizmontado}celda${numcelda}/backuppc /var/lib/backuppc");	
		system("$backuppcd start >/dev/null 2>&1");
	}
	else
	{
		system("$backuppcd stop >/dev/null 2>&1");
		system("/bin/rm /var/lib/backuppc");	
		system("touch /var/lib/backuppc");	
		system("$backuppcd start >/dev/null 2>&1");
	}		
	
}

if($xact3 eq 0 && $xact3h eq 1)
{
	system("$backuppcd stop >/dev/null 2>&1");
	system("/bin/rm /var/lib/backuppc");	
	system("touch /var/lib/backuppc");	
	system("$backuppcd start >/dev/null 2>&1");
}


}


if($q->param('env') eq "envtipopermi")
{
	$tipopermiopci=$q->param('tipopermiopci');
	$ipredpermit=$q->param('ipredpermit');
	
	if($tipopermiopci eq 1)
	{
		$valorallow="all";
	}
	
	if($tipopermiopci eq 2)
	{
		$valorallow="${ipredpermit}";
	}

	open(OLD, "< $apachebackuppc")    or die "can't open $apachebackuppc: $!";
	open(NEW, "> $aux")     or die "can't open $aux: $!";
		
	while (<OLD>) 
	{
		
			if (/Allow\sfrom\s/)
     		{
				s/Allow\sfrom\s.*$/Allow from ${valorallow}/;
			}
  		
  	
             print NEW $_            or die "can't write $aux: $!";
	}

	close(OLD)                  or die "can't close $apachebackuppc: $!";
	close(NEW)                  or die "can't close $aux: $!";
	
	system("/bin/cp $aux $apachebackuppc 1>&2");
	
	system("$httpd reload >/dev/null 2>&1");

}



if($q->param('env') eq "Insertarbackuppc")
{

$nombrepc="pc".int(rand(10000));

	open(NEW, ">> $backuppchosts")     or die "can't open $backuppchosts: $!";
	
	print NEW "#$nombrepc     1     backuppc\n" or die "can't write $backuppchosts: $!";
	
	close(NEW) or die "can't close $backuppchosts: $!";

sleep(2);

print "Location: backuppc.htm\n\n";
exit(0);
}



#estado final de los servicios
#иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии	

if($q->param('env') eq "1")
{

	$backuppc=$q->param('estado');
	
	if($linkbackuppc !~ /cpool/)
	{
		$backuppc=0;
	}
	
	open(OLD, "< $estado")    or die "can't open $estado: $!";
	open(NEW, "> $aux")     or die "can't open $aux: $!";
		
	while (<OLD>) 
	{
		
			if(/^\s*BACKUPPC\s*=\s*.*$/)
     		{
				s/^.*$/BACKUPPC\=$backuppc/;
			}
  		
  	
             print NEW $_            or die "can't write $aux: $!";
	}

	close(OLD)                  or die "can't close $estado: $!";
	close(NEW)                  or die "can't close $aux: $!";
	
	system("/bin/cp $aux $estado 1>&2");
	
	system("$backuppcd restart  >/dev/null 2>&1");
}



	
	if($q->param('env') eq "Borrar")
	{
	
		$hostcontrol=$q->param('hostcontrol');
	
		if($hostcontrol ne "")
		{

		open(OLD, "< $backuppchosts")    or die "can't open $backuppchosts: $!";
		open(NEW, "> $aux")     or die "can't open $aux: $!";
		
		while (<OLD>) 
		{			  		  	           				
			unless(/^#*$hostcontrol/)
			{				
				print NEW $_            or die "can't write $aux: $!";
			}
		}
		
		close(OLD)                  or die "can't close $backuppchosts: $!";
		close(NEW)                  or die "can't close $aux: $!";

		system("/bin/cp $aux $backuppchosts 1>&2");		
		
		system("/bin/rm ${etcbackuppc}${hostcontrol}.pl 1>&2");
		
		}
		
	system("$backuppcd restart >/dev/null 2>&1");	
		
	}
	
	
	
	if($q->param('env') eq "Aplicar")
	{
		
		open(OLD, "< $backuppchosts")    or die "can't open $backuppchosts: $!";
		open(NEW, "> $aux")    or die "can't open $aux: $!";
			
		$x=0;
		$i=0;
		
		while (<OLD>) 
		{ 
				chomp;
				$_ =~ /.*/;
					
				if ($x eq 1 && $_ =~ /.+/)
     			{
					$bombillacontrol=$q->param("${i}xact");
					$nombrecontrol=$q->param("${i}xnombre");
					$nombrecontrolh=$q->param("${i}xnombreh");
					$dhcpacti=$q->param("${i}xdhcpact");
					$horario=$q->param("${i}xhora");
					
					$usuario=$q->param("${i}x2");
					$password=$q->param("${i}x3");
					$carpetas=$q->param("${i}x4");
					
					$carpetas =~ s/\n//g;
					
					
					if($bombillacontrol eq 1)
					{
						$valorcoment="";
					}
					else
					{
						$valorcoment="#";
					}
					
					print NEW "${valorcoment}${nombrecontrol}     $dhcpacti       backuppc\n";	
										
					
					open(NEW5, "> ${etcbackuppc}${nombrecontrol}.pl");		
					print NEW5 "\$Conf{XferMethod} = 'smb';\n";
					print NEW5 "\$Conf{XferLogLevel} = 1;\n";
					print NEW5 "\$Conf{WakeupSchedule} = \[${horario}\];\n";			
					if($usuario ne "")
					{
						print NEW5 "\$Conf{SmbShareUserName} = '$usuario';\n";
					}
					if($password ne "")
					{
						print NEW5 "\$Conf{SmbSharePasswd} = '$password';\n";
					}
					if($carpetas ne "")
					{					
						if($carpetas =~ /[\s]/)
						{
							$carpetas =~ s/\s+/', '/g;
							
							$carpetas = "['".$carpetas."']";
						}
						else
						{
							$carpetas = "'".$carpetas."'";
						}
						
						print NEW5 "\$Conf{SmbShareName} = $carpetas;\n";
					}					
					close(NEW5);
					
					if($nombrecontrol ne $nombrecontrolh)
					{
					system("/bin/rm ${etcbackuppc}${nombrecontrolh}.pl 1>&2");
					}
					
					$i++;
				}
			
				if (/^host\s+dhcp\s+user\s+moreUsers/)
				{
					$x=1;
					print NEW $_."\n";	
				}
				
				if($x eq 0)
				{
					print NEW $_."\n";	
				}
										  									
		}
		close(OLD);
		close(NEW);
		
		system("/bin/cp $aux $backuppchosts 1>&2");
		
		system("$backuppcd restart >/dev/null 2>&1");
				   					
	}
	


#lectura inicial de los servicios
#иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии	

	open(OLD, "< $estado")    or die "can't open $estado: $!";
		
	while (<OLD>) 
	{
			if (/^\s*BACKUPPC\s*=.*$/)
     		{
				chomp;
				$_ =~ s/^\s+//;
				@data = split (/\s*=\s*/,$_);
		 		$backuppc = $data[1];
			}
	}

	close(OLD)     or die "can't close $estado: $!";
	
	
#seыal de estado de cada servicio
#иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии
if($backuppc eq "1") 
{
	$estadobackuppc = "activado.gif";
	$pasarbackuppc = 0;
}
else
{	
	$estadobackuppc = "desactivado.gif";
	$pasarbackuppc = 1;
}
	
open(OLD, "< $apachebackuppc")    or die "can't open $apachebackuppc: $!";
		
	while (<OLD>) 
	{
			if (/Allow\sfrom\s(.+)/)
     		{
				$valorfrom=$1;  		
     		
     			if($valorfrom eq "all")
     			{
					$restricvirtual=1;
					$checkedpermitall="checked";
				}
				else
				{
					$restricvirtual=1;
					$checkedpermitredip="checked";				
				}
			}
	}

	close(OLD)     or die "can't close $apachebackuppc: $!";
	

$activado3 = "0";

$rutadiscobackuppc=`ls -la ${varlibbackuppc} | /bin/sed -e 's/.*-> //'`;

if ($rutadiscobackuppc =~ /raizmontado\/celda(.*)\/backuppc$/m)
{
	$numcelda=$1;
	$activado3 = "1";
}	

open(OLD3, "< $montadodisco")    or die "can't open $montadodisco: $!";
		
					while (<OLD3>) 
					{
						chomp;
						$_ =~ /.*/;
						$_ =~ s/\s+/ /g;
						
						if ($_ =~ /^.*raizmontado\/celda(.*)\s\>.*$/m)
     					{
							$valoretiqueta=$1;
						}
						
						if ($valoretiqueta eq $numcelda)
						{

							@data = split (/ /,$_);
							$monta = $data[2];	
							@data = split (/#{2}/,$_);
							
							$dispo = $data[4];
							$disco = $data[5];

						}
					
					}

		close(OLD3)     or die "can't close $montadodisco: $!";

		
		if($numcelda eq "")
		{
			$disco="";
		}


$bombiroja=0;

if ($activado2 eq 1)
{

$bombiroja=1;

$estadocelda=`/bin/cat $montadodisco | grep celda${numcelda}`;

@data = split (/\s+/,$estadocelda);
$uuidvalor = $data[2];

@data = split (/#{2}/,$estadocelda);			
$dispo = $data[4];
$dispo =~ s/\s+//g;
						
$finddispo=`/sbin/findfs UUID=$uuidvalor`;
$finddispo =~ s/\/dev\///;
$finddispo =~ s/(\r?\n)//g;

if($dispo ne $finddispo)
{
		open(OLD, "< $montadodisco")    or die "can't open $montadodisco: $!";
		open(NEW, "> $aux")    or die "can't open $aux: $!";
		
		$i=1;
		$n=1;
	
		while (<OLD>) 
		{
				chomp;
				$_ =~ /.*/;
			
		 		if($_ =~ /celda${numcelda}/)
		 		{
					$_ =~ s/$dispo/$finddispo/;
				}
		 		
				print NEW $_."\n";
					
				$i=$i+1;

		}
		close(OLD);
		close(NEW);
		
		system("/bin/cp $aux $montadodisco 1>&2");
		
		$dispo=$finddispo;
		
}

$montainfo=`/bin/mount | grep $dispo | grep celda${numcelda}`;
$montainfo =~ s/(\r?\n)//g;

if ($montainfo ne "")
{
	$bombiroja=0;
}

}



#Comienzo HTML
if($CONTENTHTML ne 1)
{
print "Content-type: text/html; charset=$idicharset\n";
print "Content-Language: $idicorto\r\n\r\n";
}
print <<EOF;
<html>
<head>

<meta http-equiv="Cache-Control" content="no-cache">
<link href="/images/${vistaestilo}.css" rel="stylesheet" type="text/css">

<script language="javascript">
		

function isValidIP(tempIP,red){
	if (tempIP.search(/^[255\./^]/)==-1 && tempIP.search(/\\.0\$/)!=-1 && red!=1)
	{
		alert('No estр permitido introducir solo la\\ndirecciзn de red: '+tempIP);
		return (false);
	}
	if (tempIP == null || tempIP=="" || tempIP.search(/^[0-9\\.]+\$/)==-1)
		return (false);
	var arrIPs = tempIP.split('.');
	if (arrIPs.length!=4)
		return (false);
	for(var i=0; i<arrIPs.length; i++){
		var node = parseInt(arrIPs[i],10);
		if (isNaN(node))
			return (false);
		if (node <0 || node>255)
			return (false);
	}
	return (true);
}


function isValidMAC(tempIP){
	if (tempIP == null || tempIP=="" || tempIP.search(/^([0-9A-Fa-f]{2}[\\-:]){5}[0-9A-Fa-f]{2}\$/) == -1)
		return (false);

	return (true);
}

function rangoip(tempNetIP)
{
	
	if (tempNetIP == null || tempNetIP=="")
		return (false);
	
	var tempIP =  tempNetIP.split('-');
	
	if (tempIP.length!=2)
		return (false);
	
	if( tempIP[1].search(/^[0-9]{1,3}\$/)==-1)
		return false;
	
	
    var lrango = parseInt(tempIP[1],10);

	
	if (lrango<1 || lrango > 254 )
			return false;
			
	return  isValidIP(tempIP[0],1);
	/*		
	var arrIPs = tempIP[0].split('.');
	if (arrIPs.length!=4)
		return (false);
	for(var i=0; i<arrIPs.length; i++){
		var node = parseInt(arrIPs[i],10);
		if (isNaN(node))
			return (false);
		if (node <0 || node>255)
			return (false);
	}
	return (true);
	*/
} 


/**
 * function isValidNetIp()
 */
function isValidNetIP(tempNetIP)
{
	
	if (tempNetIP == null || tempNetIP=="")
		return (false);
	
	var tempIP =  tempNetIP.split('/');
	
	if (tempIP.length!=2)
		return (false);
	
	if( tempIP[1].search(/^[0-9]{1,2}\$/)==-1)
		return false;
	
	
    var lmask = parseInt(tempIP[1],10);

	
	if (lmask<0 || lmask > 32 )
			return false;
			
	return  isValidIP(tempIP[0],1);
	/*		
	var arrIPs = tempIP[0].split('.');
	if (arrIPs.length!=4)
		return (false);
	for(var i=0; i<arrIPs.length; i++){
		var node = parseInt(arrIPs[i],10);
		if (isNaN(node))
			return (false);
		if (node <0 || node>255)
			return (false);
	}
	return (true);
	*/
} 


function LTrim(str)
/*
   PURPOSE: Remove leading blanks from our string.
   IN: str - the string we want to LTrim
*/
{
   var whitespace = new String(" \\t\\n\\r");

   var s = new String(str);

   if (whitespace.indexOf(s.charAt(0)) != -1) {
      // We have a string with leading blank(s)...

      var j=0, i = s.length;

      // Iterate from the far left of string until we
      // don't have any more whitespace...
      while (j < i && whitespace.indexOf(s.charAt(j)) != -1)
         j++;

      // Get the substring from the first non-whitespace
      // character to the end of the string...
      s = s.substring(j, i);
   }
   return s;
}

/*
==================================================================
RTrim(string) : Returns a copy of a string without trailing spaces.
==================================================================
*/
function RTrim(str)
/*
   PURPOSE: Remove trailing blanks from our string.
   IN: str - the string we want to RTrim

*/
{
   // We don't want to trip JUST spaces, but also tabs,
   // line feeds, etc.  Add anything else you want to
   // "trim" here in Whitespace
   var whitespace = new String(" \\t\\n\\r");

   var s = new String(str);

   if (whitespace.indexOf(s.charAt(s.length-1)) != -1) {
      // We have a string with trailing blank(s)...

      var i = s.length - 1;       // Get length of string

      // Iterate from the far right of string until we
      // don't have any more whitespace...
      while (i >= 0 && whitespace.indexOf(s.charAt(i)) != -1)
         i--;


      // Get the substring from the front of the string to
      // where the last non-whitespace character is...
      s = s.substring(0, i+1);
   }

   return s;
}

/*
=============================================================
Trim(string) : Returns a copy of a string without leading or trailing spaces
=============================================================
*/

function trim(str)
{
   return RTrim(LTrim(str));
}



 // gvid,s,d,pro,port,comm,tainted
ruledata = new Array();

 
var speed=30; 
var loop, timer; 
var curListener=null;
var openedCombo=null;


function findPosX(obj)
{
	var curleft = 0;
	if (obj.offsetParent)
	{
		while (obj.offsetParent)
		{
			curleft += obj.offsetLeft
			obj = obj.offsetParent;
		}
	}
	else if (obj.x)
		curleft += obj.x;
	return curleft;
}

function findPosY(obj)
{
	var curtop = 0;
	if (obj.offsetParent)
	{
		while (obj.offsetParent)
		{
			curtop += obj.offsetTop
			obj = obj.offsetParent;
		}
	}
	else if (obj.y)
		curtop += obj.y;
	return curtop;
}


function findIndex(value)
{
	var k = 0;
	for(k=0;k < this.data.length;k++)
	{
		if(this.data[k][2] == value)
			return k;
	}
	return -1;
}


function ConstructObject1(nombre,valores)
{ 
    	this.el=document.getElementById(nombre); 
    	this.cnt=document.getElementById(nombre+'cnt'); 
    	//this.data=getValores(valores);
    	this.up=MoveAreaUp;
    	this.down=MoveAreaDown; 
    	this.MoveArea=MoveArea; 
    	this.x=0; 
    	this.y=0; 
    	this.initialised=false;
    	
	this.cnt.style.cssText="position:relative;top:0; left:0;visibility:inherited";

//this.el.style.cssText="position:absolute; width:150;height:"+this.cnt.offsetHeight
//+"; overflow:hidden; top:0; left:0; clip:rect(0,150,"+this.cnt.offsetHeight
//+",0); visibility:visible";

	this.el.style.cssText="position:absolute; width:170;height:"+this.cnt.offsetHeight+"; overflow:hidden; top:0; left:0; clip:rect(0,170,"+this.cnt.offsetHeight+",0); visibility:visible";
 
    	this.obj = nombre + "Object" 
    	eval(this.obj + "=this") 
    	this.selectedIndex=0;
    	//this.drawData=drawData;
    	//this.drawData(this.data);
    	this.findIndex=findIndex;
    	this.scrollHeight=this.cnt.offsetHeight;
    	this.clipHeight=this.el.offsetHeight; 
    	
    	
//    	alert(this.data.toString());
    	return this 
} 



function ConstructObject2(nombre,valores)
{ 
    	this.el=document.getElementById(nombre); 
    	this.cnt=document.getElementById(nombre+'cnt'); 
    	//this.data=getValores(valores);
    	this.up=MoveAreaUp;
    	this.down=MoveAreaDown; 
    	this.MoveArea=MoveArea; 
    	this.x=0; 
    	this.y=0; 
    	this.initialised=false;
    	
	this.cnt.style.cssText="position:relative;top:0; left:0;visibility:inherited";

//this.el.style.cssText="position:absolute; width:150;height:"+this.cnt.offsetHeight
//+"; overflow:hidden; top:0; left:0; clip:rect(0,150,"+this.cnt.offsetHeight
//+",0); visibility:visible";

	this.el.style.cssText="position:absolute; width:130; height:330; overflow:hidden; top:0; left:0; clip:rect(0,130,330,0); visibility:visible";
 
    	this.obj = nombre + "Object" 
    	eval(this.obj + "=this") 
    	this.selectedIndex=0;
    	//this.drawData=drawData;
    	//this.drawData(this.data);
    	this.findIndex=findIndex;
    	this.scrollHeight=this.cnt.offsetHeight;
    	this.clipHeight=this.el.offsetHeight; 
    	
    	
//    	alert(this.data.toString());
    	return this 
} 

function ConstructObject1(nombre,valores)
{ 
    	this.el=document.getElementById(nombre); 
    	this.cnt=document.getElementById(nombre+'cnt'); 
    	//this.data=getValores(valores);
    	this.up=MoveAreaUp;
    	this.down=MoveAreaDown; 
    	this.MoveArea=MoveArea; 
    	this.x=0; 
    	this.y=0; 
    	this.initialised=false;
    	
	this.cnt.style.cssText="position:relative;top:0; left:0;visibility:inherited";

//this.el.style.cssText="position:absolute; width:150;height:"+this.cnt.offsetHeight
//+"; overflow:hidden; top:0; left:0; clip:rect(0,150,"+this.cnt.offsetHeight
//+",0); visibility:visible";

	this.el.style.cssText="position:absolute; width:160; height:200; overflow:hidden; top:0; left:0; clip:rect(0,160,200,0); visibility:visible";
 
    	this.obj = nombre + "Object" 
    	eval(this.obj + "=this") 
    	this.selectedIndex=0;
    	//this.drawData=drawData;
    	//this.drawData(this.data);
    	this.findIndex=findIndex;
    	this.scrollHeight=this.cnt.offsetHeight;
    	this.clipHeight=this.el.offsetHeight; 
    	
    	
//    	alert(this.data.toString());
    	return this 
} 


var initialised; 

function MoveArea(x,y){ 
    this.x=x;
    this.y=y 
    this.cnt.style.left=this.x 
    this.cnt.style.top=this.y 
} 
 
function MoveAreaDown(move)
{ 
	if(this.y<0)
	{ 
    		this.MoveArea(0,this.y+move) 
    		if(loop) 
    			setTimeout(this.obj+".down("+move+")",speed) 
	} 
} 

function MoveAreaUp(move){ 
//alert(this.clipHeight+"..."+this.y+"..."+this.scrollHeight );
    if(( this.clipHeight - this.y  ) < this.scrollHeight)
    { 
    		this.MoveArea(0,this.y+move) 
    		if(loop) 
    			setTimeout(this.obj+".up("+move+")",speed) 
	} 
} 

function PerformScroll(objeto,speed){ 
 if(objeto.initialised){ 
  loop=true; 
  if(speed>0) 
   objeto.down(speed) 
  else 
   objeto.up(speed) 
 } 
} 
 
function CeaseScroll(objeto){ 
//alert(ruledata.toString());
    loop=false 
    if(timer) clearTimeout(timer) 
}

function InitialiseScrollableArea2(name,data)
{ 
    var obj=new ConstructObject2(name,data); 
    obj.MoveArea(0,0); 
    obj.el.style.visibility='hidden';
    obj.initialised=true; 
    return obj;
} 

function InitialiseScrollableArea1(name,data)
{ 
    var obj=new ConstructObject1(name,data); 
    obj.MoveArea(0,0); 
    obj.el.style.visibility='hidden';
    obj.initialised=true; 
    return obj;
} 


function controlamulti()
{
		horaini=document.getElementById('horaini').value;
		var parte = horaini.split(':');

		if (document.getElementById('horaini').value.search(/^[0-2]{1}[0-9]{1}:[0-5]{1}[0-9]{1}\$/)==-1 || document.getElementById('horaini').value=="" || parte[0]>23)
		{
			alert(document.getElementById('horaini').value+' formato de hora incorrecto\\nLos cambios no se guardarрn');
			return;
			//document.theform.submit();
		}

/*						
		fechaini=document.getElementById('fechaini').value;
		//var parte = fechaini.split('\/');
		// || document.getElementById('fechaini').value.search(/^\\*\\/[0-5]{1}[0-9]{1}\$/)==-1  || document.getElementById('fechaini').value.search(/^[0-2]{1}[0-9]{1}\\/\\*\$/)==-1
		
		if (document.getElementById('fechaini').value.search(/^\\*\\/[0-5]{1}[0-9]{1}\$/)==-1 && document.getElementById('fechaini').value.search(/^[0-5]{1}[0-9]{1}\\/\\*\$/)==-1 && document.getElementById('fechaini').value.search(/^\\*\\/\\*\$/)==-1)
		{
		
		if (document.getElementById('fechaini').value.search(/^[0-3]{1}[0-9]{1}\\/[0-5]{1}[0-9]{1}\$/)==-1 || document.getElementById('fechaini').value=="")
		{
			alert(document.getElementById('fechaini').value+' formato de fecha incorrecto\\nLos cambios no se guardarрn');
			return;
			//document.theform.submit();
		}

		}
*/		
		/*
		fechadiaini=document.getElementById('fechadiaini').value;
		
		if (document.getElementById('fechadiaini').value.search(/^\\*\\/[0-5]{1}[0-9]{1}\$/)==-1 && document.getElementById('fechadiaini').value.search(/^[0-5]{1}[0-9]{1}\\/\\*\$/)==-1 && document.getElementById('fechadiaini').value.search(/^\\*\\/\\*\$/)==-1)
		{
		
		if (document.getElementById('fechadiaini').value.search(/^[0-3]{1}[0-9]{1}\\/[0-5]{1}[0-9]{1}\$/)==-1 || document.getElementById('fechadiaini').value=="")
		{
			alert(document.getElementById('fechadiaini').value+' formato de dias incorrecto\\nLos cambios no se guardarрn');
			return;
			//document.theform.submit();
		}

		}
		
		
		mes=document.getElementById('fechamesini').value;
		
		if (document.getElementById('fechamesini').value.search(/^\\*\\/[0-5]{1}[0-9]{1}\$/)==-1 && document.getElementById('fechamesini').value.search(/^[0-5]{1}[0-9]{1}\\/\\*\$/)==-1 && document.getElementById('fechamesini').value.search(/^\\*\\/\\*\$/)==-1)
		{
		
		if (document.getElementById('fechamesini').value.search(/^[0-3]{1}[0-9]{1}\\/[0-5]{1}[0-9]{1}\$/)==-1 || document.getElementById('fechamesini').value=="")
		{
			alert(document.getElementById('fechamesini').value+' formato de mes incorrecto\\nLos cambios no se guardarрn');
			return;
			//document.theform.submit();
		}

		}
		*/
		
var control=document.getElementById('control').value;
document.getElementById(control+'horaini').value=document.getElementById('horaini').value;

}



function toggle(listener,container,x,y)
{

	var objContainer = eval(container); 
	objContainer.el.style.left=x-objContainer.el.offsetWidth ;
	objContainer.el.style.top=(y+ objContainer.el.offsetHeight > document.body.scrollTop+parseInt(document.body.clientHeight) ? parseInt(document.body.clientHeight)-objContainer.el.offsetHeight+document.body.scrollTop:y);
	
	if(openedCombo!=null)
				eval(openedCombo).el.style.visibility='hidden';
				
	if(objContainer.el.style.visibility=='visible') //esconder
	{
		objContainer.el.style.visibility='hidden';
		curListener=null;
		openedCombo=null;
	}
	else//mostrar
	{
		curListener=listener;
		openedCombo=container;
		objContainer.el.style.visibility='visible'; 
	}	


		document.getElementById('horaini').value=document.getElementById(listener+'horaini').value;


document.theform.control.value=listener;

}



function toggle4(listener,container,x,y)
{

	var objContainer = eval(container); 
	objContainer.el.style.left=x-objContainer.el.offsetWidth ;
	objContainer.el.style.top=(y+ objContainer.el.offsetHeight > document.body.scrollTop+parseInt(document.body.clientHeight) ? parseInt(document.body.clientHeight)-objContainer.el.offsetHeight+document.body.scrollTop:y);
	
	if(openedCombo!=null)
				eval(openedCombo).el.style.visibility='hidden';
				
	if(objContainer.el.style.visibility=='visible') //esconder
	{
		objContainer.el.style.visibility='hidden';
		curListener=null;
		openedCombo=null;
	}
	else//mostrar
	{
		curListener=listener;
		openedCombo=container;
		objContainer.el.style.visibility='visible'; 
	}	

var valorlistener =  listener.split('x');
	
document.theform.control.value=listener;
}


function aplicarvalor2(infodisk,etiqueta,numero)
{
asignar=document.getElementById('control').value;

document.getElementById(asignar).value=etiqueta;
document.getElementById('numcelda').value=numero;
	
	clearLista();
}



function clearLista()
{
	if(openedCombo!=null)
		eval(openedCombo).el.style.visibility='hidden';
	
	curListener=null;
	openedCombo=null;
}


function InitialiseAreas()
{ 
	//alert(ruledata.toString());
	//objContainer1=InitialiseScrollableArea2('divContainer1',null);
	//objContainer4=InitialiseScrollableArea1('divContainer4',null);
	//initRules();
} 




function validarForm()
{	
	oscuprocessform();

	document.theform.action="backuppc.htm";
	document.theform.env.value="Aplicar";
	document.theform.submit();
	
}


flechaact =  new Image(27,25);
flechaact.src = "../images/bombillaactivado.gif"
flechades =  new Image(27,25);
flechades.src = "../images/bombilladesactivado.gif"

function toggleRegla(id)
{
	var flecha = document.getElementById('flecha'+id);
	
	if(flecha.src == flechaact.src)
	{
		flecha.src = flechades.src;
		document.getElementById(id+'xact').value=0;
	}
	else
	{
		flecha.src = flechaact.src;	
		document.getElementById(id+'xact').value=1;
	}

}


flechaact2 =  new Image(27,25);
flechaact2.src = "../images/encender.gif"
flechades2 =  new Image(27,25);
flechades2.src = "../images/apagado.gif"

function toggleRegla2(id)
{
	var flecha = document.getElementById('flecha2'+id);
	
	if(flecha.src == flechaact2.src)
	{
		flecha.src = flechades2.src;	
		document.getElementById(id+'xact2').value=0;
	}
	else
	{
		flecha.src = flechaact2.src;	
		document.getElementById(id+'xact2').value=1;
	}
}	




flechaact3 =  new Image(27,25);
flechaact3.src = "../images/bombillaactivado.gif"
flechades3 =  new Image(27,25);
flechades3.src = "../images/bombilladesactivado.gif"

flechaactR =  new Image(27,25);
flechaactR.src = "../images/bombillaactivadoroja.gif"

function toggleRegla3()
{

	var flecha3 = document.getElementById('flechadisco');
	
	if(flecha3.src == flechaact3.src)
	{
		flecha3.src = flechades3.src;
		document.getElementById('xact3').value=0;
	}
	else
	{
		flecha3.src = flechaact3.src;	
		document.getElementById('xact3').value=1;
	}

}


flechadhcpact =  new Image(27,25);
flechadhcpact.src = "../images/etidhcpsi.gif"
flechadhcpdes =  new Image(27,25);
flechadhcpdes.src = "../images/etidhcpno.gif"

function toggleRegladhcp(id)
{

	var flechadhcp = document.getElementById('flechadhcp'+id);
	
	if(flechadhcp.src == flechadhcpact.src)
	{
		flechadhcp.src = flechadhcpdes.src;
		document.getElementById(id+'xdhcpact').value=0;
	}
	else
	{
		flechadhcp.src = flechadhcpact.src;	
		document.getElementById(id+'xdhcpact').value=1;
	}

}




function borrar(opc)
{


	if(!confirm('┐Desea borrar todas las reglas?'))
	return false;

oscuprocessform();
		    
theform.env.value = opc;
document.theform.submit();

}



function enviar(est)
{

if (est == 1)
{
estado = "activar";
}
else
{
estado = "desactivar";
}


	if(!confirm('┐Desea ' + estado +' el servicio BackupPC?'))
	return false;

oscuprocessform();	
    
theform.env.value = 1;
theform.estado.value = est;
document.theform.submit();

}


function borrarhostbackup(nombre)
{
	oscuprocessform();

	document.theform.hostcontrol.value=nombre;
	document.theform.action = "backuppc.htm";
	document.theform.env.value="Borrar";
	document.theform.submit();
}


function envcontroldisco()
{

if (document.getElementById('xact3').value ==1 && document.getElementById('disco').value=='')
{
	alert('Seleccione una unidad de datos al activar');	
	return false;
}

if (document.getElementById('xact3').value == 0)
{
	document.getElementById('disco').value=='';
}

oscuprocessform();

document.theform.env.value="envcontroldisco";
document.theform.action='backuppc.htm';
document.theform.submit();
}


function validarkey(e)
{			
 	tecla = (document.all) ? e.keyCode : e.which; // 2
    if (tecla!=13) return true; // 3
    patron =/[.+]/; // 4
    te = String.fromCharCode(tecla); // 5
    return patron.test(te); // 6
}

function validarkeymin(e)
{			
 	tecla = (document.all) ? e.keyCode : e.which; // 2
    if (tecla==8) return true; // 3
    patron =/[A-Za-z0-9-]/; // 4
    te = String.fromCharCode(tecla); // 5
    return patron.test(te); // 6
}

function verpassw(valor)
{

thisInput = document.getElementById(valor+'x3');
valordefecto = document.getElementById(valor+'x3').value;

changeInputType(thisInput,'text',valordefecto,false,true);

}


function changeInputType(
  oldElm, // a reference to the input element
  iType, // value of the type property: 'text' or 'password'
  iValue, // the default value, set to 'password' in the demo
  blankValue, // true if the value should be empty, false otherwise
  noFocus) {  // set to true if the element should not be given focus
 
  if(!oldElm || !oldElm.parentNode || (iType.length<4) || 
    !document.getElementById || !document.createElement) return;
  var newElm = document.createElement('input');
  newElm.type = iType;
  if(oldElm.name) newElm.name = oldElm.name;
  if(oldElm.id) newElm.id = oldElm.id;
  if(oldElm.className) newElm.className = oldElm.className;
  if(oldElm.size) newElm.size = oldElm.size;
  if(oldElm.tabIndex) newElm.tabIndex = oldElm.tabIndex;
  if(oldElm.accessKey) newElm.accessKey = oldElm.accessKey;
  newElm.onfocus = function(){return function(){
    if(this.hasFocus) return;
    var newElm = changeInputType(this,'password',iValue,
      (this.value.toLowerCase()==iValue.toLowerCase())?true:false);
    if(newElm) newElm.hasFocus=true;
  }}();
  newElm.onblur = function(){return function(){
    if(this.hasFocus)
    if(this.value=='' || (this.value.toLowerCase()==iValue.toLowerCase())) {
      changeInputType(this,'text',iValue,false,true);
    }
  }}();
 // hasFocus is to prevent a loop where onfocus is triggered over and over again
  newElm.hasFocus=false;
  oldElm.parentNode.replaceChild(newElm,oldElm);
  if(!blankValue) newElm.value = iValue;
  if(!noFocus || typeof(noFocus)=='undefined') {
    window.tempElm = newElm;
    setTimeout("tempElm.hasFocus=true;tempElm.focus();",1);
  }
  return newElm;
}

function tipopermi()
{
oscuprocessform();

document.theform.env.value="envtipopermi";
document.theform.action='backuppc.htm';
document.theform.submit();
}

   </script>
   
<style>
textarea.noborde {
scrollbar-face-color: #ffffff;
scrollbar-highlight-color: #ffffff;
scrollbar-3dlight-color: #ffffff;
scrollbar-darkshadow-color: #ffffff;
scrollbar-shadow-color: #ffffff;
scrollbar-arrow-color: #ffffff;
scrollbar-track-color: #ffffff;
}
</style> 
   
</head><body onclick="clearLista()" marginwidth="0" topmargin="0" leftmargin="0">

	<!-- inicio tabla contenedor -->
<table width="100%" cellspacing="0" cellpadding="0" border="0">
<tr>
    
	 <td width="100%" class="azulfdosc" valign="top">





<table cellspacing="5" cellpadding="5" width="100%" border="0">
<tr>
<td>

<form name="theform" method="post" onsubmit="oscuprocessform()">
<input name="volver" type="hidden" value="$volver"><input name="estado" type="hidden">
<input name="env" type="hidden"><input type="hidden" name="control" id='control'><input name="modovista" type="hidden">
<input name="hostcontrol" type="hidden">

<CENTER><table cellpadding=0 cellspacing=0><tr><!--<td><img src='../images/backuppc.gif'></td><td width="10"></td>--><td><FONT SIZE=+1 COLOR=#3e73a8><B>BackupPC</B></FONT></td></tr></table>

<script language="JavaScript1.2">

function oscuprocessform()
{
document.getElementById('oscuprocess').style.visibility='visible';
document.getElementById('oscuprocess2').style.visibility='visible';           
}

/*if (navigator.appVersion.indexOf("MSIE")!=-1){
	document.write("<HR NOSHADE class='barracolor'>");
}
else
{
	document.write("<div width='100%' style='background-color: #3e73a8; height:2px; max-height:2px'></div>");
}*/

</script>


<br><br><br>



<table><tr>
<td width="50"></td>
<td>

<table><tr>
<td><img src="../images/$estadobackuppc" onClick="enviar('$pasarbackuppc')" style="cursor:pointer"></td><td width="4"></td><td>$backuppc_activar</td><td width="40"></td>
</tr></table>

</td>
<td width="20"></td>

<td align="center">
EOF

if($backuppc eq "1") 
{	
print <<EOF;
<!--<img src="/images/window_fullscreen.png" border="0" style="cursor:pointer" onClick="myRef = window.open('/backuppc/','mywin','left=330,top=150,width=900,height=600,toolbar=1,resizable=1,status=0,menubar=0,scrollbars=yes');myRef.focus()"><br><b>fullscreen</b>-->

<div id=\"permitirnetworkservice\" style='background: #3e73a8;
  -webkit-border-top-left-radius: 10;
  -webkit-border-bottom-left-radius: 10;
  -moz-border-top-left-radius: 10;
  -moz-border-bottom-left-radius: 10;
  border-top-left-radius: 10px;
  border-bottom-left-radius: 10px;
  
  -webkit-border-top-right-radius: 10;
  -webkit-border-bottom-right-radius: 10;
  -moz-border-top-right-radius: 10;
  -moz-border-bottom-right-radius: 10;
  border-top-right-radius: 10px;
  border-bottom-right-radius: 10px;
  font-family: verdana;
  color: #ffffff;
  font-size: 10px;
  font-weight: bold;
  padding: 3px 3px 3px 3px;
  text-decoration: none;cursor:pointer; width:80; height:50' align=center class='bordenegrosombra' onClick="myRef = window.open('/backuppc/','mywin','left=330,top=150,width=900,height=600,toolbar=1,resizable=1,status=0,menubar=0,scrollbars=yes');myRef.focus()"><br>fullscreen</div>


EOF
}
print <<EOF;
</td>
<td width="20"></td>
<td>

EOF
$disco="IMTDATOS/backuppc";
$rutadiscohilo="/var/lib/backuppc";
print <<EOF;
<table width="210" border="0">
<tr>
<!--<td width='50' align='center'><img src='../images/discoide.gif'></td>-->
<td align='center' width=5></td>
<td width='150'><b>$netbiosconfig_unidad:</b><br><input class='campotxt4' type='text' id='disco' name='disco' size=18 value='$disco' readonly><input class='campotxt4' type='hidden' id='numcelda' name='numcelda' value='$numcelda'></td>
<!--<td valign="center" align="left"><font color="white">0</font><br><img style='cursor:pointer' src='../images/flechabajo.gif' onclick='toggle4(\"disco\",objContainer4,findPosX(this)+20,findPosY(this)+20);event.cancelBubble=true;'/></td>-->
<td>
<script language='javascript'>/*document.write('<img id=\"flechadisco\" src=\"'+($activado3 == 1?flechaact3.src:flechades3.src\)+'\" style=\"cursor:pointer\" onclick=\"toggleRegla3()\" >');*/</script>
<input  type='hidden' id='xact3' name='xact3' value='$activado3'/><input  type='hidden' id='xact3h' name='xact3h' value='$activado3'/>
</td>
<!--<td><img src='../images/ok.gif' style="cursor:pointer" onClick="envcontroldisco()"></td>-->
</tr>
<tr><td align='center' width=5></td><td>

<div style="cursor:pointer" onClick="myRef = window.open('/imt/hilomusical.htm?dir=$rutadiscohilo','mywin','left=330,top=150,width=900,height=600,toolbar=1,resizable=1,status=0,menubar=1,scrollbars=yes');myRef.focus()">
<table><tr><td><img src="../images/miniverdeflecha.gif"></td><td><b>Explorar contenido</b></td></tr></table>
</div>

</td></tr>
</table>

</td>
<td>

<table>
<tr><td></td><td><b>Permitido (directiva apache):</b></td></tr>
<tr><td><input type=radio name="tipopermiopci" value=1 $checkedpermitall></td><td>Todas las direcciones</td></tr>
<tr><td><input type=radio name="tipopermiopci" value=2 $checkedpermitredip></td><td>red/ip <input type="text" name="ipredpermit" size="14" class="campotxt" value="${valorfrom}"></td></tr>
<tr><td></td><td>

<div style="background: #809e12;
  background-image: -webkit-linear-gradient(top, #809e12, #809e12);
  background-image: -moz-linear-gradient(top, #809e12, #809e12);
  background-image: -ms-linear-gradient(top, #809e12, #809e12);
  background-image: -o-linear-gradient(top, #809e12, #809e12);
  background-image: linear-gradient(to bottom, #809e12, #809e12);
  -webkit-border-radius: 10;
  -moz-border-radius: 10;
  border-radius: 10px;
  font-family: verdana;
  color: #ffffff;
  font-size: 11px;
  padding: 5px 10px 5px 10px;
  text-decoration: none;cursor:pointer;width:65;" align=center onClick="tipopermi()" class="bordenegrosombra"><b><font>modificar</font></b></div>

</td></tr></table>


</td>

</tr></table>

</td>
</tr></table>


EOF
if($backuppc eq "1")
{	
print <<EOF;
<iframe src="/backuppc"  frameborder="no" scrolling="no" width=100% height=1000></iframe>
EOF
}
print <<EOF;
</center>



<script type="text/javascript" language="javascript1.2">

var flecha = document.getElementById('flecha2');
			
var bombiroja=1;

if (bombiroja == $bombiroja)
{
	flecha.src = flechaactR.src;
}

</script>

EOF
require "$imtlayers";
print <<EOF;	
</form>
 </body>
</html>
EOF


#eliminar variable temporal de uso
system("/bin/rm $aux >/dev/null 2>&1");
