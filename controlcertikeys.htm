#! /usr/bin/perl -wX


use CGI;
$q = new CGI;

$ENV{'SHELL'} = '/bin/sh';		
$ENV{'PATH'} = '/usr/lib/jvm/java-1.5.0-sun-1.5.0.10/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/X11R6/bin';

require "/opt/imt/web/modulos/rutaidioma";
require "/opt/imt/web/modulos/rutaficheros";
$aux = "/tmp/aux".int(rand(10000));




if($q->param('env') eq "aplicarsourcelist")
{
$infosourceslist=$q->param('infosourceslist');
system("/bin/echo '$infosourceslist' > $sourceslist");
}



if($q->param('env') eq "actualizarversion")
{
system("cd /opt/imt/gestor/ && /usr/bin/screen -A -m -d -S root ./imt-updater &");

print "Location: actualizando.htm\n\n";
exit(0);
}



if($q->param('env') eq "notifi")
{

		$resulact=$q->param('updateresul');
		$actualiact=$q->param('updateactuali');
		
		$emailvalor=$q->param('email');
		

		if($resulact ne 1)
		{
			$resulact=0;
		}
		
		if($actualiact ne 1)
		{
			$actualiact=0;
		}

		open(OLD, "< $crontab")    or die "can't open $crontab: $!";
		open(NEW, "> $aux")     or die "can't open $aux: $!";
		
			while (<OLD>) 
			{
				if(/^(#{2})+/)
				{
					$seguir=1;
				}
			
				if($seguir eq 1)
				{
			
					if (/updateutils\/comprobar-update/)     
     				{
						if($actualiact eq "1")
	   					{
							s/#+//;
						}
						else
     					{
     						s/^#*/#/;
     					}
					}
					
									
         	    print NEW $_            or die "can't write $aux: $!";
				
				}
			}

		close(OLD)                  or die "can't close $crontab: $!";
		close(NEW)                  or die "can't open $aux: $!";    
	    	   
	    system("/usr/bin/crontab $aux");
		
		

		open(OLD, "< $notificar")    or die "can't open $notificar: $!";
		open(NEW, "> $aux")     or die "can't open $aux: $!";
		
			while (<OLD>) 
			{
				if (/emailupdate/)     
     			{
					if(/^\s*emailupdate\s*=\s*.*$/)
     				{
						s/^.*$/emailupdate\=$emailvalor/;
					}
				}
			
				if (/updateresul/)     
     			{
					if(/^\s*updateresul\s*=\s*.*$/)
     				{
						s/^.*$/updateresul\=$resulact/;
					}
				}
				
				if (/updateactuali/)     
     			{
					if(/^\s*updateactuali\s*=\s*.*$/)
     				{
						s/^.*$/updateactuali\=$actualiact/;
					}
				}
				
         	    print NEW $_            or die "can't write $aux: $!";
			}

		close(OLD)                  or die "can't close $notificar: $!";
		close(NEW)                  or die "can't open $aux: $!";    
	    	   
	    system("/bin/cp $aux $notificar  >/dev/null 2>&1");

}


#modulos
#иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии	

	open(OLD, "< $modulos")    or die "can't open $modulos: $!";
		
	while (<OLD>) 
	{
			if (/^\s*VRS\s*=.*$/)
     		{
				chomp;
				$_ =~ s/^\s+//;
				@data = split (/\s*=\s*/,$_);
		 		$version = $data[1];
			}					
	}

	close(OLD)     or die "can't close $modulos: $!";



#lectura de notificar - email
#иииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииииии	

	open(OLD, "< $notificar")    or die "can't open $variables: $!";
		
	while (<OLD>) 
	{

			if (/^\s*emailupdate\s*=.*$/)
     		{
				chomp;
				$_ =~ s/^\s+//;
				@data = split (/\s*=\s*/,$_);
		 		$emailupdate = $data[1];
			}
			
			if (/^\s*updateresul\s*=.*$/)
     		{
				chomp;
				$_ =~ s/^\s+//;
				@data = split (/\s*=\s*/,$_);
		 		$updateresul = $data[1];
			}
			
			if (/^\s*updateactuali\s*=.*$/)
     		{
				chomp;
				$_ =~ s/^\s+//;
				@data = split (/\s*=\s*/,$_);
		 		$updateactuali = $data[1];
			}							
			
	}

	close(OLD)     or die "can't close $variables: $!";
	
	
if($updateresul eq 1)
{
	$updateresulchecked="checked";
}

if($updateactuali eq 1)
{
	$updateactualichecked="checked";
}





if($q->param('env') eq "aplicarpop3")
{
	$infocorreopop3=$q->param('infocorreopop3');
	$infocorreopop3 =~ s/\r//g;
	
	system("/bin/echo '$infocorreopop3' > $p3scanmail");
	
	system("$p3scan restart  >/dev/null 2>&1");
}			




   open(README, "/usr/bin/find $openvpndir -name '*.key' 2>&1 |") or die "No puede info: $!\n";
   while(<README>)
   {
        chomp;
        $keylistvalor1 = $keylistvalor1.$_." ";
   }
   close(README);

	@keylistvalordata1 = split (/\s+/,$keylistvalor1);

	
   open(README, "/usr/bin/find $etcbind -name '*.key' 2>&1 |") or die "No puede info: $!\n";
   while(<README>)
   {
        chomp;
        $keylistvalor2 = $keylistvalor2.$_." ";
   }
   close(README);

	@keylistvalordata2 = split (/\s+/,$keylistvalor2);


   #open(README, "/usr/bin/find $etcopenvpnprivado -name '*.key' 2>&1 |") or die "No puede info: $!\n";
   #while(<README>)
   #{
   #     chomp;
   #     $keylistvalor3 = $keylistvalor3.$_." ";
   #}
   #close(README);

	#@keylistvalordata3 = split (/\s+/,$keylistvalor3);


   open(README, "/usr/bin/find /etc/ -name '*.pem' 2>&1 |") or die "No puede info: $!\n";
   while(<README>)
   {
        chomp;
        $certlistvalor1 = $certlistvalor1.$_." ";
   }
   close(README);

   @certlistvalordata1 = split (/\s+/,$certlistvalor1);

	
   open(README, "/usr/bin/find /usr/ -name '*.pem' 2>&1 |") or die "No puede info: $!\n";
   while(<README>)
   {
        chomp;
        $certlistvalor2 = $certlistvalor2.$_." ";
   }
   close(README);

	@certlistvalordata2 = split (/\s+/,$certlistvalor2);


   open(README, "/usr/bin/find $openvpndir -name '*.pem' 2>&1 |") or die "No puede info: $!\n";
   while(<README>)
   {
        chomp;
        $certlistvalor3 = $certlistvalor3.$_." ";
   }
   close(README);

	@certlistvalordata3 = split (/\s+/,$certlistvalor3);
	
	
	open(README, "/usr/bin/find $openvpndir -name '*.crt' 2>&1 |") or die "No puede info: $!\n";
   while(<README>)
   {
        chomp;
        $certlistvalor4 = $certlistvalor4.$_." ";
   }
   close(README);

	@certlistvalordata4 = split (/\s+/,$certlistvalor4);



$actucertiestado=`aptitude -s -y install openssl | grep NUEVOS`;



#Comienzo HTML
if($CONTENTHTML ne 1)
{
print "Content-type: text/html; charset=$idicharset\n";
print "Content-Language: $idicorto\r\n\r\n";
}
print <<EOF;
<html>

<head>
<meta http-equiv="Cache-Control" content="no-cache">
<link href="/images/${vistaestilo}.css" rel="stylesheet" type="text/css">

<script language='javascript'>

  var minpwlength = 6;
    var fairpwlength = 8;
    
    var STRENGTH_SHORT = 0;  // less than minpwlength 
    var STRENGTH_WEAK = 1;  // less than fairpwlength
    var STRENGTH_FAIR = 2;  // fairpwlength or over, no numbers
    var STRENGTH_STRONG = 3; // fairpwlength or over with at least one number
    
    img0 = new Image(); 
    img1 = new Image();
    img2 = new Image();
    img3 = new Image();
    
    img0.src = '../images/tooshort.jpg';
    img1.src = '../images/fair.jpg';
    img2.src = '../images/medium.jpg';
    img3.src = '../images/strong.jpg';
    
    var strengthlevel = 0;
    
    var strengthimages = Array( img0.src,
                                img1.src,
                                img2.src,
                                img3.src );
    
    function updatestrength( pw ) {
    
        if( istoosmall( pw ) ) {
    
            strengthlevel = STRENGTH_SHORT;
			document.getElementById('nivel').innerHTML='Demasiado corta';
			document.getElementById('nivel').color='orange';
    
        }
        else if( !isfair( pw ) ) { 
    
            strengthlevel = STRENGTH_WEAK;
			document.getElementById('nivel').innerHTML='Dжbil';
    	
        }    
        else if( hasnum( pw ) ) {
    
            strengthlevel = STRENGTH_STRONG;
			document.getElementById('nivel').innerHTML='Fuerte';
    
        }
        else {
    
            strengthlevel = STRENGTH_FAIR;
			document.getElementById('nivel').innerHTML='Buena';
    	
        }
    
        document.getElementById( 'strength' ).src = strengthimages[ strengthlevel ];
    
    }
    
    function isfair( pw ) {
    
        if( pw.length < fairpwlength ) {
    
            return false;
    
        }
        else { 
    
            return true;
    
        }
    
    }
    
    function istoosmall( pw ) {
    
        if( pw.length < minpwlength ) {
    
            return true;
    
        }
        else {
    
            return false;

        }
    
    }
    
    function hasnum( pw ) {
    
        var hasnum = false;
    
        for( var counter = 0; counter < pw.length; counter ++ ) {
    
            if( !isNaN( pw.charAt( counter ) ) ) {
    
                hasnum = true;
    
            }
    
        }
    
    
        return hasnum;
    
    }





function isValidAdminPassword(s){

	if (s.length < 8) 

		return false;

	else{

		for(i=0;i<s.length;i++) {

		c = s.charAt(i);

		if (c == '&')

		return false;

	}

	}

	return true;

}




function isStringsEqual(s1,s2){

	if (s1.length != s2.length)

		return false;

	for(i=0;i<s1.length;i++) {

		if (s1.charAt(i) != s2.charAt(i))

			return false;

	}

	return true;

}



</script>

<script language='javascript'>


flechaact =  new Image(27,25);
flechaact.src = "../images/bombillaactivado.gif"
flechades =  new Image(27,25);
flechades.src = "../images/bombilladesactivado.gif"

function toggleRegla(id)
{
	var flecha = document.getElementById('flecha'+id);
	
	if(flecha.src == flechaact.src)
	{
		flecha.src = flechades.src;
		document.getElementById(id+'xact').value=0;
	}
	else
	{
		flecha.src = flechaact.src;	
		document.getElementById(id+'xact').value=1;
	}

}



function rango(posicion)
{
var posicion;

document.theform.useractual.value = document.getElementById(posicion+'x1').value;
document.theform.infocomentario.value = document.getElementById(posicion+'x2').value;

imagenOn = new Image();

for(i = 0; i < document.theform.actualselec.length;i++)
	document.actualselec[i].src='../images/flechaselecno.gif';

imagenOn.src='../images/flechaselec.gif';

if(i > 0)
{ 
document.actualselec[posicion].src = imagenOn.src; 
}
else
{
document.actualselec.src = imagenOn.src; 
}

return false;
}



function LTrim(str)
/*
   PURPOSE: Remove leading blanks from our string.
   IN: str - the string we want to LTrim
*/
{
   var whitespace = new String(" \\t\\n\\r");

   var s = new String(str);

   if (whitespace.indexOf(s.charAt(0)) != -1) {
      // We have a string with leading blank(s)...

      var j=0, i = s.length;

      // Iterate from the far left of string until we
      // don't have any more whitespace...
      while (j < i && whitespace.indexOf(s.charAt(j)) != -1)
         j++;

      // Get the substring from the first non-whitespace
      // character to the end of the string...
      s = s.substring(j, i);
   }
   return s;
}

/*
==================================================================
RTrim(string) : Returns a copy of a string without trailing spaces.
==================================================================
*/
function RTrim(str)
/*
   PURPOSE: Remove trailing blanks from our string.
   IN: str - the string we want to RTrim

*/
{
   // We don't want to trip JUST spaces, but also tabs,
   // line feeds, etc.  Add anything else you want to
   // "trim" here in Whitespace
   var whitespace = new String(" \\t\\n\\r");

   var s = new String(str);

   if (whitespace.indexOf(s.charAt(s.length-1)) != -1) {
      // We have a string with trailing blank(s)...

      var i = s.length - 1;       // Get length of string

      // Iterate from the far right of string until we
      // don't have any more whitespace...
      while (i >= 0 && whitespace.indexOf(s.charAt(i)) != -1)
         i--;


      // Get the substring from the front of the string to
      // where the last non-whitespace character is...
      s = s.substring(0, i+1);
   }

   return s;
}

/*
=============================================================
Trim(string) : Returns a copy of a string without leading or trailing spaces
=============================================================
*/

function trim(str)
{
   return RTrim(LTrim(str));
}



 // gvid,s,d,pro,port,comm,tainted
ruledata = new Array();

 
var speed=30; 
var loop, timer; 
var curListener=null;
var openedCombo=null;


function findPosX(obj)
{

	var curleft = 0;
	if (obj.offsetParent)
	{
		while (obj.offsetParent)
		{
			curleft += obj.offsetLeft
			obj = obj.offsetParent;
		}
	}
	else if (obj.x)
		curleft += obj.x;
	return curleft;
}

function findPosY(obj)
{
	var curtop = 0;
	if (obj.offsetParent)
	{
		while (obj.offsetParent)
		{
			curtop += obj.offsetTop
			obj = obj.offsetParent;
		}
	}
	else if (obj.y)
		curtop += obj.y;
	return curtop;
}

function findIndex(value)
{
	var k = 0;
	for(k=0;k < this.data.length;k++)
	{
		if(this.data[k][2] == value)
			return k;
	}
	return -1;
}

function ConstructObject(nombre,valores)
{ 
    	this.el=document.getElementById(nombre); 
    	this.cnt=document.getElementById(nombre+'cnt'); 
    //	this.data=getValores(valores);
    	this.up=MoveAreaUp;
    	this.down=MoveAreaDown; 
    	this.MoveArea=MoveArea; 
    	this.x=0; 
    	this.y=0; 
    	this.initialised=false;

	this.cnt.style.cssText="position:relative;top:0; left:0;visibility:inherited";
	this.el.style.cssText="position:absolute; width:228;height:170; overflow:hidden; top:0; left:0; clip:rect(0,228,170,0); visibility:visible";

 
    	this.obj = nombre + "Object" 
    	eval(this.obj + "=this") 
    	this.selectedIndex=0;
 
    	this.findIndex=findIndex;
    	this.scrollHeight=this.cnt.offsetHeight;
    	this.clipHeight=this.el.offsetHeight; 
    	
//    	alert(this.data.toString());
    	return this 
} 

var initialised; 

function MoveArea(x,y){ 
    this.x=x;
    this.y=y 
    this.cnt.style.left=this.x 
    this.cnt.style.top=this.y 
} 
 
function MoveAreaDown(move)
{ 
	if(this.y<0)
	{ 
    		this.MoveArea(0,this.y+move) 
    		if(loop) 
    			setTimeout(this.obj+".down("+move+")",speed) 
	} 
} 

function MoveAreaUp(move){ 
//alert(this.clipHeight+"..."+this.y+"..."+this.scrollHeight );
    if(( this.clipHeight - this.y  ) < this.scrollHeight)
    { 
    		this.MoveArea(0,this.y+move) 
    		if(loop) 
    			setTimeout(this.obj+".up("+move+")",speed) 
	} 
} 

function InitialiseScrollableArea(name,data)
{ 
    var obj=new ConstructObject(name,data); 
    obj.MoveArea(0,0); 
    obj.el.style.visibility='hidden';
    obj.initialised=true; 
    return obj;
} 

function InitialiseAreas()
{ 
	//alert(ruledata.toString());
	objContainer1=InitialiseScrollableArea('divContainer1',null);
	//objContainer2=InitialiseScrollableArea2('divContainer2',null);

	//initRules();
} 


function toggle(listener,container,x,y)
{

	var objContainer = eval(container); 
	objContainer.el.style.left=x-objContainer.el.offsetWidth ;
	objContainer.el.style.top=(y+ objContainer.el.offsetHeight > document.body.scrollTop+parseInt(document.body.clientHeight) ? parseInt(document.body.clientHeight)-objContainer.el.offsetHeight+document.body.scrollTop:y);
	
	if(openedCombo!=null)
				eval(openedCombo).el.style.visibility='hidden';
				
	if(objContainer.el.style.visibility=='visible') //esconder
	{
		objContainer.el.style.visibility='hidden';
		curListener=null;
		openedCombo=null;
	}
	else//mostrar
	{
		curListener=listener;
		openedCombo=container;
		objContainer.el.style.visibility='visible';
	}	

}

function clearLista()
{
	if(openedCombo!=null)
		eval(openedCombo).el.style.visibility='hidden';
	
	curListener=null;
	openedCombo=null;
}

function actualizarversion()
{

var tamanotmp = document.getElementById('tamanotmp').value;

if(tamanotmp < 0)
{
alert('En este instante no dispone de especio en memoria para realizar la actualizaciзn\\nRevise su espacio de memoria libre.');
}

if(!confirm('┐Desea actualizar su sistema a una versiзn superior? \\nRevise el tiempo estimado de actualizaciзn.'))
	return false;

oscuprocessform();

document.theform.env.value="actualizarversion"
document.theform.action='update.htm';
document.theform.submit();
}



function enviarnotifi()
{

oscuprocessform();

document.theform.env.value="notifi"
document.theform.action='update.htm';
document.theform.submit();
}



function aplicarsourcelist()
{
	oscuprocessform();

	document.theform.action = "systemupgrade.htm";
	document.theform.env.value="aplicarsourcelist";
	document.theform.submit();
}


</script>


</head>



<BODY BGCOLOR=WHITE onclick="clearLista()">
$actucertiestado
<form name="theform" method="post" onsubmit="oscuprocessform()">
<input name="env" type="hidden">

<CENTER>

<br>
<CENTER><table cellpadding=0 cellspacing=0><tr><td><FONT SIZE=+1 COLOR=#3e73a8><B>$controlcertikeys_titulo1</B></FONT></td></tr></table>

<script language="JavaScript1.2">

function oscuprocessform()
{
document.getElementById('oscuprocess').style.visibility='visible';
document.getElementById('oscuprocess2').style.visibility='visible';           
}

/*if (navigator.appVersion.indexOf("MSIE")!=-1){
	document.write("<HR NOSHADE class='barracolor'>");
}
else
{
	document.write("<div width='100%' style='background-color: #3e73a8; height:2px; max-height:2px'></div>");
}*/

</script>
<p><br><br><br>

<table border="0"><tr><td valign="top">
<center>		


<TABLE border=0><TR><TD valign="top">

<!--<table cellspacing="0" cellpadding="0" width=520 border="0">

<tr><td>&nbsp;</td><td  height="23"  width="100%" background="../images/barratitulo.gif" align="center">

<font color="white"><b>$controlcertikeys_keyscreadas</b></font></td></tr>

</table>-->

<table cellpadding=0 cellspacing=0 border="0" style="border: 0px #ccc solid;font-size:16px;font-family:arial;line-height:15px;font-weight:bold;" class="bordenegrosombra" width="520" height="150">
<tr><td width="5200" height="23" class="barratituloazul">&nbsp;&nbsp;&nbsp;<font color="white"><b>$controlcertikeys_keyscreadas</b></font></td></tr>
<tr><td>
	
<div id='scroll' style='height: 210px; overflow: auto;float:center;	width:520px;'>	

<table cellspacing="3" cellpadding="0" width=500 class="linea"  border=0>
EOF

if($nohaydosponi eq 1)
{
print "<tr><td width=27></td><td><font color='#000000'>$controlcertikeys_nohaypaquedispo</font></td></tr>";
}


foreach (@keylistvalordata1) {

print "<tr><!--<td width=27><input type='checkbox' value='1' name='updateactuali' id='updateactuali' $updateactualichecked></td>--><td><font color='#000000'>$_</font></td></tr>";
} 

foreach (@keylistvalordata2) {

print "<tr><!--<td width=27><input type='checkbox' value='1' name='updateactuali' id='updateactuali' $updateactualichecked></td>--><td><font color='#000000'>$_</font></td></tr>";
} 

#foreach (@keylistvalordata3) {

#print "<tr><!--<td width=27><input type='checkbox' value='1' name='updateactuali' id='updateactuali' $updateactualichecked></td>--><td><font color='#000000'>$_</font></td></tr>";
#} 

print <<EOF;
</table>

</div>

</td></tr></table>
  
</TD>
<td width="20"></td>
<td width="150" align="center">
EOF
if($actucertiestado ne "")
{
print <<EOF;
	<img src="/images/aviso.gif"><br><br><b>$controlcertikeys_actupaquete - <font color="#990000">$controlcertikeys_posiblesvulnera</font></b>
	
EOF
}
else
{
print <<EOF;
	<b>$controlcertikeys_certifiykeys:<br><font color="#990000">$controlcertikeys_noexistevulnera</font></b>
EOF
}
print <<EOF;
</td>
</TR></TABLE>


<br>

<TABLE><TR><TD valign="top">

<!--<table cellspacing="0" cellpadding="0" width=520 border="0">

<tr><td>&nbsp;</td><td  height="23"  width="100%" background="../images/barratitulo.gif" align="center">

<font color="white"><b>$controlcertikeys_certicreasistema</b></font></td></tr>

</table>-->

<table cellpadding=0 cellspacing=0 border="0" style="border: 0px #ccc solid;font-size:16px;font-family:arial;line-height:15px;font-weight:bold;" class="bordenegrosombra" width="520" height="150">
<tr><td width="5200" height="23" class="barratituloazul">&nbsp;&nbsp;&nbsp;<font color="white"><b>$controlcertikeys_keyscreadas</b></font></td></tr>
<tr><td>
	
<div id='scroll' style='height: 225px; overflow: auto;float:center;	width:520px;'>	

<table cellspacing="3" cellpadding="0" width=500 class="linea"  border=0>
EOF

if($nohaydosponi eq 1)
{
print "<tr><td width=50></td><td><font color='#000000'>$controlcertikeys_nohaypaquedispo</font></td></tr>";
}

foreach (@certlistvalordata1) {

print "<tr><!--<td width=27><input type='checkbox' value='1' name='updateactuali' id='updateactuali' $updateactualichecked></td>--><td><font color='#000000'>$_</font></td></tr>";
} 

foreach (@certlistvalordata2) {

print "<tr><!--<td width=27><input type='checkbox' value='1' name='updateactuali' id='updateactuali' $updateactualichecked></td>--><td><font color='#000000'>$_</font></td></tr>";
} 

foreach (@certlistvalordata3) {

print "<tr><!--<td width=27><input type='checkbox' value='1' name='updateactuali' id='updateactuali' $updateactualichecked></td>--><td><font color='#000000'>$_</font></td></tr>";
} 

foreach (@certlistvalordata4) {

print "<tr><!--<td width=27><input type='checkbox' value='1' name='updateactuali' id='updateactuali' $updateactualichecked></td>--><td><font color='#000000'>$_</font></td></tr>";
} 

print <<EOF;
</table>

</div>

</td></tr>
<tr><td height="10"></td></tr></table>
  
</TD>
<td width="20"></td>
<td width="150">
</td>
</TR></TABLE>



<input type="hidden" name="tamanotmp" id="tamanotmp" value="$tamanotmp">





</FORM>


EOF
require "$imtlayers";
print <<EOF;
</BODY>

</HTML>
EOF

